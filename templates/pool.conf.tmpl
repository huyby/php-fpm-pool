; This file is used as a template for creating new php-fpm pool configurations;
; Changes will not apply to pool configuration that are already created.

[global]
; Pid file
; Default Value: none
pid = /var/run/php5-fpm/@@NAME@@.pid

; Error log file
; Default Value: /var/log/php-fpm.log
error_log = /data/log/php5-fpm/@@NAME@@/pool.log

; Log level
; Possible Values: alert, error, warning, notice, debug
; Default Value: notice
log_level = notice

; If this number of child processes exit with SIGSEGV or SIGBUS within the time
; interval set by emergency_restart_interval then FPM will restart. A value
; of '0' means 'Off'.
; Default Value: 0
emergency_restart_threshold = 0

; Interval of time used by emergency_restart_interval to determine when
; a graceful restart will be initiated.  This can be useful to work around
; accidental corruptions in an accelerator's shared memory.
; Available Units: s(econds), m(inutes), h(ours), or d(ays)
; Default Unit: seconds
; Default Value: 0
emergency_restart_interval = 0

; Time limit for child processes to wait for a reaction on signals from master.
; Available units: s(econds), m(inutes), h(ours), or d(ays)
; Default Unit: seconds
; Default Value: 0
process_control_timeout = 0

; Send FPM to background. Set to 'no' to keep FPM in foreground for debugging.
; Default Value: yes
daemonize = yes

;;;;;;;;;;;;;;;;;;;;
; Pool Definition  ;
;;;;;;;;;;;;;;;;;;;;

; Start a new pool named '@@NAME@@'.
[@@NAME@@]

; The address on which to accept FastCGI requests.
; Valid syntaxes are:
;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific address on
;                            a specific port;
;   'port'                 - to listen on a TCP socket to all addresses on a
;                            specific port;
;   '/path/to/unix/socket' - to listen on a unix socket.
; Note: This value is mandatory.
listen = 127.0.0.1:@@PORT@@

; Set listen(2) backlog.
; Default Value: 128
listen.backlog = 65535

; List of ipv4 addresses of FastCGI clients which are allowed to connect.
; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original
; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address
; must be separated by a comma. If this value is left blank, connections will be
; accepted from any ip address.
; Default Value: any
listen.allowed_clients = 127.0.0.1

; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions.
; Default Values: user and group are set as the running user
;                 mode is set to 0666
listen.owner = @@USER@@
listen.group = www-data
listen.mode = 0666

; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = @@USER@@
group = www-data

; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static    - a fixed number (pm.max_children) of child processes;
;   ondemand  - the processes spawn on demand (when requested, as opposed to
;               dynamic, where pm.start_servers are started when the service is started).
;   dynamic   - the number of child processes are set dynamically based on the
;               following directives:
;               pm.max_children      - the maximum number of children that can
;                                     be alive at the same time.
;               pm.start_servers     - the number of children created on startup.
;               pm.min_spare_servers - the minimum number of children in 'idle'
;                                     state (waiting to process). If the number
;                                     of 'idle' processes is less than this
;                                     number then some children will be created.
;               pm.max_spare_servers - the maximum number of children in 'idle'
;                                     state (waiting to process). If the number
;                                     of 'idle' processes is greater than this
;                                    <noframes></noframes>umber then some children will be killed.
; Note: This value is mandatory.
pm = ondemand

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes to be created when pm is set to 'dynamic'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI.
; Note: Used when pm is set to either 'static', 'ondemand' or 'dynamic'
; Note: This value is mandatory.
pm.max_children = 15

; The number of seconds after which an idle process will be killed.
; Does _not_ impact PHP's max_execution timeout. This timeout is only for processes
; that have no request pending or processing.
; Default Value: 10s
pm.process_idle_timeout = 10s

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default Value: 0
pm.max_requests = 500

; Redirect worker stdout and stderr into main error log. If not set, stdout
; and stderr will be redirected to /dev/null according to FastCGI specs.
; Default value: no.
catch_workers_output = yes

; Enable coredumps
rlimit_core = 0

; The log file for slow requests
; Default Value: not set
; Note: slowlog is mandatory if request_slowlog_timeout is set
slowlog = /data/log/php5-fpm/@@NAME@@/slow.log
request_slowlog_timeout = 15s

php_admin_value[error_log] = /data/log/php5-fpm/@@NAME@@/error.log
php_admin_value[mail.log] = /data/log/php5-fpm/@@NAME@@/mail.log
php_admin_flag[log_errors] = on
php_admin_value[session.save_path] = /data/lib/php5/session_@@NAME@@
php_admin_value[memory_limit] = 32M
